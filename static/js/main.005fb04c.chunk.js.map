{"version":3,"sources":["components/form.js","components/Todo.js","components/list.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","id","Math","floor","random","name","Todo","todo","count","times","bra","cket","filter","el","List","duplicate","map","App","useState","status","setDuplicate","useEffect","filterHandler","v","i","indexOf","Object","values","reduce","r","k","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.005fb04c.chunk.js","sourcesContent":["const Form = ({ setinputText, todos, setTodos, inputText, setStatus }) => {\r\n   \r\n    // javascript code\r\n    const inputTextHandler = (e)=>{\r\n\r\n      setinputText(e.target.value)\r\n    }\r\n\r\n    const submitTodoHandler = (e) =>{\r\n      e.preventDefault();\r\n\r\n      setTodos([\r\n        ...todos,\r\n        { text: inputText,  id: Math.floor(Math.random() * 100) }\r\n      ]);\r\n       \r\n      setinputText('');\r\n    }\r\n\r\n    const statusHandler = (e) =>{\r\n      setStatus(e.target.value) ;\r\n    }\r\n\r\n\r\n    return (  \r\n        <form>\r\n        <input value= {inputText} onChange = { inputTextHandler } type=\"text\" className=\"todo-input\" />\r\n\r\n        <button onClick = { submitTodoHandler } className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        \r\n\r\n        <div className=\"select\">\r\n          <select onChange= {statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All Values</option>\r\n            <option value=\"count\"> Count</option>\r\n            <option value=\"repeated\">Repeated Values</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n \r\nexport default Form;","const Todo = ({text, setTodos, todos, todo, count,times, bra, cket}) => {\r\n\r\n    const deleteHandler = ()=>{\r\n        setTodos(todos.filter( (el) => el.id !== todo.id))\r\n    }\r\n    \r\n    \r\n    return (  \r\n        <div className=\"todo\">\r\n            <li className={\"todo-item\" }>{text}    {bra}{count}{times}{cket}</li>\r\n           \r\n            <button onClick={ deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash \"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Todo;","import Todo from \"./Todo\"\r\n\r\nconst List = ({ todos, setTodos, duplicate } ) => {\r\n  \r\n\r\n    return (  \r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {\r\n           duplicate.map(todo => (\r\n              <Todo todo={todo} key={todo.id} text ={todo.text} setTodos={ setTodos } todos={ todos } count={todo.count} bra={todo.bra} cket={todo.cket} times={todo.times}/>\r\n            )) \r\n          }\r\n        </ul>\r\n      </div>\r\n\r\n    );\r\n}\r\n \r\nexport default List;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/form';\nimport List from './components/list';\n\nfunction App() {\n\n  const [inputText, setinputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [duplicate, setDuplicate] =useState([]);\n\n  useEffect( () =>{ \n    filterHandler()\n  }, [todos, status])\n\n\n ; \n\n\n  const filterHandler = () =>{\n\n     switch(status) {\n\n      case 'repeated':\n      setDuplicate( todos.filter((v,i) => {\n      return  todos.map((todo)=>todo.text).indexOf(v.text) != i })) \n      break;\n\n      case 'count':\n      setDuplicate( Object.values(todos.reduce((r, todo) => {\n        let k = `${todo.text}`;\n        if(!r[k]) r[k] = {...todo, bra: \"(\", count: 1, times:\"x\", cket:\")\"}\n        else r[k].count += 1;\n        return r;\n      }, {}))\n      ) \n      break;\n\n      default:\n        setDuplicate(todos)\n        break;\n    }\n    \n  }\n\n\n  return (\n    <div className=\"App\">\n\n     <header>\n       Program Run \n     </header>\n     \n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setinputText = {setinputText} setStatus = {setStatus} />\n      <List  setTodos={ setTodos } todos={ todos } duplicate= { duplicate } />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}